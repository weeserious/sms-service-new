name: Django CI/CD
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Tests
      env:
        DB_NAME: github_actions
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        OIDC_RP_CLIENT_ID: test_client_id
        OIDC_RP_CLIENT_SECRET: test_secret
        AUTH0_DOMAIN: test.auth0.com
        API_IDENTIFIER: test_identifier
        AT_USERNAME: sandbox
        AT_API_KEY: test_key
        EXEMPT_VIEWS_FROM_LOGIN: False
        USE_TOKEN_MIDDLEWARE: True
      run: |
        python manage.py test
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - name: Extended network diagnostics
      run: |
        echo "GitHub Actions Runner information:"
        curl -s ipinfo.io
        echo "----------------------------"
        echo "DNS resolution check:"
        host ${{ secrets.HOST }}
        dig +short ${{ secrets.HOST }}
        echo "----------------------------"
        echo "Basic connectivity check with ICMP:"
        ping -c 3 ${{ secrets.HOST }} || echo "Ping failed (may be blocked)"
        echo "----------------------------"
        echo "TCP connection test with increased verbosity and timeout:"
        timeout 30s nc -zv ${{ secrets.HOST }} 22 -w 20
      continue-on-error: true
      
    - name: Check GitHub IP ranges
      run: |
        echo "GitHub Actions IP ranges:"
        curl -s https://api.github.com/meta | jq -r '.actions | join("\n")' || echo "Failed to get GitHub IP ranges"
        
    - name: Try alternative SSH connection methods
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        echo "Attempting connection with specific options:"
        ssh -v -o ConnectTimeout=30 -o ServerAliveInterval=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'echo "TEST CONNECTION"'
      continue-on-error: true
      
    - name: Try SSH via proxy
      run: |
        echo "Installing proxy tool:"
        sudo apt-get install -y socat
        
        echo "Attempting SSH through proxy:"
        socat TCP-LISTEN:2222,fork TCP:${{ secrets.HOST }}:22 &
        sleep 5
        ssh -v -o ConnectTimeout=30 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@localhost -p 2222 'echo "PROXY TEST"'
      continue-on-error: true
      
    - name: Final deployment attempt
      run: |
        # Use all the options we can to make this resilient
        ssh -o ConnectTimeout=60 -o ServerAliveInterval=10 -o ServerAliveCountMax=6 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.USERNAME }}@${{ secrets.HOST }} '
          cd /opt/sms_service/sms-service &&
          git pull origin main &&
          # Add additional deployment commands here
          echo "Deployment completed"
        '